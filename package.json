{
  "name": "aleph",
  "version": "1.1.0",
  "description": "Mediachain client and javascript peer",
  "main": "index.js",
  "scripts": {
    "build-jq": "node scripts/build-jq.js",
    "postinstall": "npm run build-jq",
    "test": "mocha --compilers js:babel-register ./test",
    "build": "mkdir -p ./lib && babel --copy-files src -d lib",
    "check": "standard && flow",
    "cli": "npm run build >/dev/null && node ./lib/client/cli/index.js",
    "prepublish": "npm run build"
  },
  "bin": {
    "mcclient": "./bin/mcclient.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mediachain/aleph.git"
  },
  "author": "",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mediachain/aleph/issues"
  },
  "homepage": "https://github.com/mediachain/aleph#readme",
  "dependencies": {
    "ajv": "^4.7.7",
    "bin-build": "^2.2.0",
    "byline": "^5.0.0",
    "cbor": "^2.0.0",
    "duplex-child-process": "0.0.5",
    "libp2p-crypto": "^0.7.0",
    "libp2p-secio": "^0.6.2",
    "libp2p-spdy": "^0.9.0",
    "libp2p-swarm": "^0.25.0",
    "libp2p-tcp": "^0.9.1",
    "libp2p-websockets": "^0.9.0",
    "mafmt": "^2.1.2",
    "multiaddr": "^2.0.2",
    "multihashes": "^0.2.2",
    "multihashing": "^0.2.1",
    "ndjson": "^1.4.3",
    "node-fetch": "^1.6.3",
    "nofilter": "0.0.3",
    "object-path": "^0.11.2",
    "peer-book": "^0.3.0",
    "peer-id": "^0.8.0",
    "peer-info": "^0.8.0",
    "protocol-buffers": "^3.1.6",
    "pull-abortable": "^4.1.0",
    "pull-length-prefixed": "^1.2.0",
    "pull-stream": "^3.4.5",
    "thenify-all": "^1.6.0",
    "varint": "^4.0.1",
    "yargs": "^6.3.0"
  },
  "devDependencies": {
    "babel-cli": "^6.14.0",
    "babel-eslint": "^7.1.0",
    "babel-plugin-transform-flow-strip-types": "^6.14.0",
    "babel-register": "^6.14.0",
    "eslint-plugin-flowtype": "^2.18.2",
    "interface-connection": "^0.3.0",
    "mocha": "^3.0.2",
    "mocha-eventually": "^1.1.0",
    "standard": "^8.1.0"
  },
  "standard": {
    "parser": "babel-eslint",
    "plugins": [
      "flowtype"
    ]
  },
  "greenkeeper": {
    "ignore" : [ "libp2p-spdy", "libp2p-swarm" ]
  }
}
